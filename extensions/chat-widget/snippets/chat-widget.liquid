<link rel="stylesheet" href="{{ 'output.css' | asset_url }}">

<!-- Chat container -->
<div id="chat-container" class="hidden fixed w-1/2 bottom-32 left-16 mb-4 z-50">
  <div class="shadow-md rounded-lg bg-[#F5F5F5] z-50">
    <div class="p-4 border-b text-black rounded-t-lg flex justify-between items-center">
      <p class="font-semibold text-4xl">ThriftLow</p>
      <button id="close-chat" class="text-gray-300 hover:text-gray-400 focus:outline-none focus:text-gray-400">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    <div id="chatbox" class="p-4 min-h-full overflow-y-auto">
      <!-- Chat messages will be displayed here -->
      <div class="flex-col justify-center items-center text-center py-5">
        <h1 class="font-bold text-6xl">Welcome Michael!</h1>
        <p class="text-4xl text-[#596A7A] py-5">
          I'm here to assist you in finding the best options based on your preferences.
        </p>
      </div>

      {% comment %} Example recommended searches {% endcomment %}
      <div class="flex justify-center items-center">
        <div class="recommended-search rounded-lg bg-[#F5F8FA] text-clip w-1/4 mx-5 my-5 border border-gray-700 hover:opacity-75 hover:cursor-pointer">
          <p class="leading-7 py-5 px-5">Can you compare prices for wireless microphones across different stores?</p>
        </div>
        <div class="recommended-search rounded-lg bg-[#F5F8FA] text-clip w-1/4 mx-5 my-5 border border-gray-700 hover:opacity-75 hover:cursor-pointer">
          <p class="leading-7 py-5 px-5">Is a thermometer available in stock at Walgreens?</p>
        </div>
      </div>
      <div class="flex justify-center items-center">
        <div class="recommended-search rounded-lg bg-[#F5F8FA] text-clip w-1/4 mx-5 my-5 border border-gray-700 hover:opacity-75 hover:cursor-pointer">
          <p class="leading-7 py-5 px-5">What are the current deals and discounts on MacBook Air M2?</p>
        </div>
        <div class="recommended-search rounded-lg bg-[#F5F8FA] text-clip w-1/4 mx-5 my-5 border border-gray-700 hover:opacity-75 hover:cursor-pointer">
          <p class="leading-7 py-5 px-5">What accessories would go well with this outfit?</p>
        </div>
      </div>
    </div>
    <div class="p-4 border-t flex">
      <input
        id="user-input"
        type="text"
        placeholder="{{ 'search.placeholder' | t }}"
        class="w-full px-3 py-2 border rounded-l-md border-black focus:outline-none focus:ring-2 focus:ring-blue-500"
      >
      <button
        id="send-button"
        class=" text-white bg-[#003366] px-1 py-2 rounded-r-md hover:bg-blue-600 transition duration-300"
      >
        <img src="{{ 'send.png' | asset_url }}" width="34" height="33">
      </button>
    </div>
  </div>
</div>
<div class="fixed z-50 w-28 h-28 text-white bg-slate-500 rounded-full flex justify-center items-center bottom-10 left-8">
  <button
    id="open-chat"
    class="text-white text-4xl rounded-full hover:bg-slate-400 z-50"
  >
    <img src="{{ 'customer-support.png' | asset_url }}" width="50" height="50" class="my-2 mx-2 rounded-lg">
  </button>
</div>

<script>
  const chatbox = document.getElementById('chatbox');
  const chatContainer = document.getElementById('chat-container');
  const userInput = document.getElementById('user-input');
  const sendButton = document.getElementById('send-button');
  const openChatButton = document.getElementById('open-chat');
  const closeChatButton = document.getElementById('close-chat');

  let isChatboxOpen = false; // Set the initial state to off

  // Function to toggle the chatbox visibility
  function toggleChatbox() {
    chatContainer.classList.toggle('hidden');
    isChatboxOpen = !isChatboxOpen; // Toggle the state
  }

  // Add an event listener to the open chat button
  openChatButton.addEventListener('click', toggleChatbox);

  // Add an event listener to the close chat button
  closeChatButton.addEventListener('click', toggleChatbox);

  // Add an event listener to the send button
  sendButton.addEventListener('click', function () {
    const userMessage = userInput.value;
    if (userMessage.trim() !== '') {
      addUserMessage(userMessage);
      respondToUser(userMessage);
      userInput.value = '';
    }
  });

  userInput.addEventListener('keyup', function (event) {
    if (event.key === 'Enter') {
      const userMessage = userInput.value;
      addUserMessage(userMessage);
      respondToUser(userMessage);
      userInput.value = '';
    }
  });

  function addUserMessage(message) {
    const messageElement = document.createElement('div');
    messageElement.classList.add('mb-2', 'text-right');
    messageElement.innerHTML = `<p class="bg-blue-500 text-white rounded-lg py-2 px-4 inline-block">${message}</p>`;
    chatbox.appendChild(messageElement);
    chatbox.scrollTop = chatbox.scrollHeight;
  }

  function addBotMessage(message) {
    const messageElement = document.createElement('div');
    messageElement.classList.add('mb-2');
    messageElement.innerHTML = `<p class="bg-gray-200 text-gray-700 rounded-lg py-2 px-4 inline-block">${message}</p>`;
    chatbox.appendChild(messageElement);
    chatbox.scrollTop = chatbox.scrollHeight;
  }

  function respondToUser(userMessage) {
    // Replace this with your chatbot logic
    setTimeout(() => {
      addBotMessage('This is a response from the chatbot.');
    }, 500);
  }
  // Select all recommended search items
  const recommendedSearchItems = document.querySelectorAll('.recommended-search');

  // Add click event listeners to each recommended search item
  recommendedSearchItems.forEach((item) => {
    item.addEventListener('click', function () {
      // Get the text content of the clicked item
      const searchText = this.querySelector('p').textContent;
      // Populate the user input field with the search text
      userInput.value = searchText;
    });
  });
</script>
